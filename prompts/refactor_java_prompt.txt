You're a senior Java engineer reviewing this file for critical refactoring.

Your task is to:
- Identify anti-patterns (god classes, deep inheritance, static abuse, tight coupling)
- Flag large methods, confusing switch blocks, nested if-else chains, or excessive try-catch nesting
- Point out inefficient resource management (e.g., manual streams, non-closed IO, raw threads)
- Recommend targeted changes: extract methods, decouple logic, replace outdated constructs
- Suggest improvements that reduce cognitive load without rewriting the entire system

Assume the developer fixing this is under pressure. Be specific.  
Each suggestion should be direct, technical, and backed by a reason.

Hereâ€™s the file:
```java
{{content}}

